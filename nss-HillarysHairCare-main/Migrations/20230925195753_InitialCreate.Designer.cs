// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HillarysHair.Migrations
{
    [DbContext(typeof(HillarysHairDbContext))]
    [Migration("20230925195753_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HillarysHair.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("StylistId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StylistId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            EndTime = new DateTime(2023, 10, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 10, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            StylistId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            EndTime = new DateTime(2023, 10, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 10, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            StylistId = 2
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            EndTime = new DateTime(2023, 10, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 10, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            StylistId = 3
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            EndTime = new DateTime(2023, 10, 1, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 10, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StylistId = 4
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 5,
                            EndTime = new DateTime(2023, 10, 1, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 10, 1, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            StylistId = 5
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 2,
                            EndTime = new DateTime(2023, 10, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 10, 1, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            StylistId = 1
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 3,
                            EndTime = new DateTime(2023, 10, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 10, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            StylistId = 2
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 4,
                            EndTime = new DateTime(2023, 9, 22, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 9, 22, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            StylistId = 3
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 5,
                            EndTime = new DateTime(2023, 9, 22, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 9, 22, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            StylistId = 4
                        },
                        new
                        {
                            Id = 10,
                            CustomerId = 1,
                            EndTime = new DateTime(2023, 9, 22, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2023, 9, 22, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            StylistId = 5
                        });
                });

            modelBuilder.Entity("HillarysHair.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johndoe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Phone = "555-123-4567"
                        },
                        new
                        {
                            Id = 2,
                            Email = "alice.smith@example.com",
                            FirstName = "Alice",
                            LastName = "Smith",
                            Phone = "555-987-6543"
                        },
                        new
                        {
                            Id = 3,
                            Email = "bob.johnson@example.com",
                            FirstName = "Bob",
                            LastName = "Johnson",
                            Phone = "555-555-5555"
                        },
                        new
                        {
                            Id = 4,
                            Email = "eva.williams@example.com",
                            FirstName = "Eva",
                            LastName = "Williams",
                            Phone = "555-888-9999"
                        },
                        new
                        {
                            Id = 5,
                            Email = "michael.brown@example.com",
                            FirstName = "Michael",
                            LastName = "Brown",
                            Phone = "555-777-3333"
                        },
                        new
                        {
                            Id = 6,
                            Email = "sophia.martinez@example.com",
                            FirstName = "Sophia",
                            LastName = "Martinez",
                            Phone = "555-111-2222"
                        },
                        new
                        {
                            Id = 7,
                            Email = "william.davis@example.com",
                            FirstName = "William",
                            LastName = "Davis",
                            Phone = "555-444-7777"
                        },
                        new
                        {
                            Id = 8,
                            Email = "olivia.garcia@example.com",
                            FirstName = "Olivia",
                            LastName = "Garcia",
                            Phone = "555-666-8888"
                        },
                        new
                        {
                            Id = 9,
                            Email = "james.miller@example.com",
                            FirstName = "James",
                            LastName = "Miller",
                            Phone = "555-222-5555"
                        },
                        new
                        {
                            Id = 10,
                            Email = "charlotte.jones@example.com",
                            FirstName = "Charlotte",
                            LastName = "Jones",
                            Phone = "555-999-1111"
                        });
                });

            modelBuilder.Entity("HillarysHair.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 30.00m,
                            Description = "Haircut"
                        },
                        new
                        {
                            Id = 2,
                            Cost = 25.00m,
                            Description = "Shampoo and Blowout"
                        },
                        new
                        {
                            Id = 3,
                            Cost = 60.00m,
                            Description = "Color Highlights"
                        },
                        new
                        {
                            Id = 4,
                            Cost = 20.00m,
                            Description = "Manicure"
                        },
                        new
                        {
                            Id = 5,
                            Cost = 30.00m,
                            Description = "Pedicure"
                        },
                        new
                        {
                            Id = 6,
                            Cost = 35.00m,
                            Description = "Deep Conditioning Treatment"
                        },
                        new
                        {
                            Id = 7,
                            Cost = 40.00m,
                            Description = "Root Touch-Up"
                        },
                        new
                        {
                            Id = 8,
                            Cost = 75.00m,
                            Description = "Balayage"
                        },
                        new
                        {
                            Id = 9,
                            Cost = 45.00m,
                            Description = "Updo Hairstyle"
                        },
                        new
                        {
                            Id = 10,
                            Cost = 15.00m,
                            Description = "Facial Waxing"
                        },
                        new
                        {
                            Id = 11,
                            Cost = 100.00m,
                            Description = "Hair Extensions"
                        },
                        new
                        {
                            Id = 12,
                            Cost = 55.00m,
                            Description = "Perms and Waves"
                        },
                        new
                        {
                            Id = 13,
                            Cost = 70.00m,
                            Description = "Brazilian Blowout"
                        },
                        new
                        {
                            Id = 14,
                            Cost = 150.00m,
                            Description = "Bridal Hair and Makeup"
                        },
                        new
                        {
                            Id = 15,
                            Cost = 20.00m,
                            Description = "Scalp Massage"
                        });
                });

            modelBuilder.Entity("HillarysHair.Models.ServiceAppointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("integer");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceAppointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentId = 1,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            AppointmentId = 2,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 3,
                            AppointmentId = 2,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 4,
                            AppointmentId = 3,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 5,
                            AppointmentId = 3,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 6,
                            AppointmentId = 3,
                            ServiceId = 6
                        },
                        new
                        {
                            Id = 7,
                            AppointmentId = 4,
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 8,
                            AppointmentId = 4,
                            ServiceId = 8
                        },
                        new
                        {
                            Id = 9,
                            AppointmentId = 4,
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 10,
                            AppointmentId = 4,
                            ServiceId = 10
                        },
                        new
                        {
                            Id = 11,
                            AppointmentId = 5,
                            ServiceId = 11
                        },
                        new
                        {
                            Id = 12,
                            AppointmentId = 6,
                            ServiceId = 12
                        },
                        new
                        {
                            Id = 13,
                            AppointmentId = 6,
                            ServiceId = 13
                        },
                        new
                        {
                            Id = 14,
                            AppointmentId = 7,
                            ServiceId = 14
                        },
                        new
                        {
                            Id = 15,
                            AppointmentId = 7,
                            ServiceId = 15
                        },
                        new
                        {
                            Id = 16,
                            AppointmentId = 7,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 17,
                            AppointmentId = 7,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 18,
                            AppointmentId = 7,
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 19,
                            AppointmentId = 8,
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 20,
                            AppointmentId = 8,
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 21,
                            AppointmentId = 9,
                            ServiceId = 15
                        },
                        new
                        {
                            Id = 22,
                            AppointmentId = 10,
                            ServiceId = 14
                        });
                });

            modelBuilder.Entity("HillarysHair.Models.Stylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stylists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "emily.smith@example.com",
                            FirstName = "Emily",
                            IsActive = true,
                            LastName = "Smith",
                            Phone = "555-123-4567"
                        },
                        new
                        {
                            Id = 2,
                            Email = "daniel.johnson@example.com",
                            FirstName = "Daniel",
                            IsActive = false,
                            LastName = "Johnson",
                            Phone = "555-987-6543"
                        },
                        new
                        {
                            Id = 3,
                            Email = "grace.williams@example.com",
                            FirstName = "Grace",
                            IsActive = true,
                            LastName = "Williams",
                            Phone = "555-555-5555"
                        },
                        new
                        {
                            Id = 4,
                            Email = "thomas.brown@example.com",
                            FirstName = "Thomas",
                            IsActive = true,
                            LastName = "Brown",
                            Phone = "555-888-9999"
                        },
                        new
                        {
                            Id = 5,
                            Email = "natalie.garcia@example.com",
                            FirstName = "Natalie",
                            IsActive = false,
                            LastName = "Garcia",
                            Phone = "555-777-3333"
                        });
                });

            modelBuilder.Entity("HillarysHair.Models.Appointment", b =>
                {
                    b.HasOne("HillarysHair.Models.Customer", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HillarysHair.Models.Stylist", "Stylist")
                        .WithMany("Appointments")
                        .HasForeignKey("StylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Stylist");
                });

            modelBuilder.Entity("HillarysHair.Models.ServiceAppointment", b =>
                {
                    b.HasOne("HillarysHair.Models.Appointment", "Appointment")
                        .WithMany("ServiceAppointments")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HillarysHair.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("HillarysHair.Models.Appointment", b =>
                {
                    b.Navigation("ServiceAppointments");
                });

            modelBuilder.Entity("HillarysHair.Models.Customer", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("HillarysHair.Models.Stylist", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
